<!--

Code important to SONA is tagged with #SONA
Code important to Firebase is tagged with #FIREBASE
Code that needs to be commented out in order to test locally is tagged with #TESTING
Written in Javascript and HTML, using the jsPsych library

Experiment is Hosted on GitHub Pages https://smithbradleyc.github.io/jsPsych_Online_Experiments/
Experiment is explained on GitHub https://github.com/SmithBradleyC/jsPsych_Online_Experiments

-->

<!-- ################################## -->
<!-- some preamble to set everything up.-->
<!-- ################################## -->


<!doctype html>
<html>
 <head>
  <meta charset="utf-8">
  <title>Experiment</title>
  <!-- viewport setup -->
  <meta name="viewport" content="width=device-width, initial-scale=1">
  <!-- lab.js library and experiment code -->
  <!-- MousetrapPlugin -->
  <script src="https://mousetrap.felixhenninger.com/0.1.0/mousetrap.js"></script>
  <!-- MousetrapPlugin -->
  <script src="https://mousetrap.felixhenninger.com/0.1.0/mousetrap.js"></script>
  <!-- MousetrapPlugin -->
  <script src="https://mousetrap.felixhenninger.com/0.1.0/mousetrap.js"></script>
  <!-- MousetrapPlugin -->
  <script src="https://mousetrap.felixhenninger.com/0.1.0/mousetrap.js"></script>
  <!-- MousetrapPlugin -->
  <script src="https://mousetrap.felixhenninger.com/0.1.0/mousetrap.js"></script>
  <!-- lab.js library code -->
  <script src="lib/lab.js" data-labjs-script="library"></script>
  <script src="lib/lab.fallback.js" data-labjs-script="fallback"></script>
  <link rel="stylesheet" href="lib/lab.css">
  <!-- study code and styles -->
  <script src="script.js" defer="true"></script>
  <link rel="stylesheet" href="style.css">
</head>
<body>
  <!-- If you'd rather have a container with a fixed width
       and variable height, try removing the fullscreen class below -->
  <div class="container fullscreen" data-labjs-section="main">
    <main class="content-vertical-center content-horizontal-center">
      <div>
        <h2>Loading Experiment</h2>
        <p>The experiment is loading and should start in a few seconds</p>
      </div>
    </main>
  </div>
<body>


<!-- ################################## -->
<!--       Set up FireBase Stuff        -->
<!-- ################################## -->

<!-- Allow remote storage on Google Firebase -->
<script src="https://www.gstatic.com/firebasejs/6.3.4/firebase-app.js"></script> <!-- #FIREBASE -->
<script src="https://www.gstatic.com/firebasejs/6.3.4/firebase-auth.js"></script> <!-- #FIREBASE -->
<script src="https://www.gstatic.com/firebasejs/6.3.4/firebase-database.js"></script> <!-- #FIREBASE -->

<!-- enter some javascript code-->
<script type="text/javascript">
// Firebase set up

 // Your web app's Firebase configuration (given to us by firebase)
  var firebaseConfig = {
    apiKey: "AIzaSyDgSVdH9Zp6Fzrdp9NqsvsUPbc__d0e6Es",
    authDomain: "circle-size-experiment.firebaseapp.com",
    databaseURL: "https://circle-size-experiment.firebaseio.com",
    projectId: "circle-size-experiment",
    storageBucket: "circle-size-experiment.appspot.com",
    messagingSenderId: "483995727736",
    appId: "1:483995727736:web:4b29bc53fa35358c11fa8d", // #FIREBASE
  }; // #FIREBASE 
  
  // Initialize Firebase
  firebase.initializeApp(firebaseConfig); // #FIREBASE
  
  // Get a reference to the database service
  var database = firebase.database(); // #FIREBASE
  
  // login anonymous user
  firebase.auth().signInAnonymously().catch(function(error) { // #FIREBASE
  // Handle Errors here.
  var errorCode = error.code; // #FIREBASE
  var errorMessage = error.message; // #FIREBASE
  // ...
}); // #FIREBASE
  
  // check if user can sign on to firebase 
  firebase.auth().onAuthStateChanged(function(user) { // #FIREBASE
  if (user) { // #FIREBASE
    // User is signed in.
    var isAnonymous = user.isAnonymous; // #FIREBASE
    var uid = user.uid; // #FIREBASE
    // ...
  } else {
    // User is signed out.
    // ...
  }
  // ...
});
</script>

<!-- ################################## -->
<!--  load the jsPsych plugins needed.  -->
<!-- ################################## -->

<!-- base library. Needed for everything -->
<script src="jspsych-6-2/jspsych.js"></script> 

<!-- additional libraries needed for their specific trial type. Look in jspsych-6-2/plugins for more-->
<script src="jspsych-6-2/plugins/jspsych-html-keyboard-response.js"></script> 
<script src="jspsych-6-2/plugins/jspsych-external-html.js"></script>
<script src="jspsych-6-2/plugins/jspsych-survey-text.js"></script>
<script src="jspsych-6-2/plugins/jspsych-survey-html-form.js"></script>
<script src="jspsych-6-2/plugins/jspsych-fullscreen.js"></script>

<!-- load the stimuli needed, add your own files if you make new ones -->
<script src='stimuli/exp_text.js'></script>
<script src='stimuli/practice_stimuli.js'></script>


<!-- enter javascript code -->
<script type="text/javascript">
/* Note this is a js (javascript) code chunk */

// function to check if in fullscreen mode
  function is_fullscreen(){
  // check if in fullscreen mode
  if(window.innerWidth == screen.width && window.innerHeight == screen.height){
    return true;
  }else{return false}
  }

// function to extract data from URL variables
  function getUrlVars() { // #SONA
    var vars = {}; // #SONA
    var parts = window.location.href.replace(/[?&]+([^=&]+)=([^&]*)/gi,function(m,key,value) { // #SONA
        vars[key] = value; // #SONA
    }); // #SONA
    return vars; // #SONA
  } // #SONA

// function to go find data in the URL
// should be provided a defualt (e.g., "") so that there will be no errors thrown
  function getUrlParam(parameter, defaultvalue){ // #SONA
    var urlparameter = defaultvalue; // #SONA
    if(window.location.href.indexOf(parameter) > -1){ // #SONA
        urlparameter = getUrlVars()[parameter]; // #SONA
        } // #SONA
    return urlparameter; // #SONA
  }

// #######################################
//  set up experiment parameters
// #######################################

// Create unique identifier for subject (random string of letters/numbers X digits long)
var subject_id = jsPsych.randomization.randomID(15); // #FIREBASE

// to check for consent
var consent_check = false;

// get the id number for the SONA participant so that we can grant credits automatically
var SONA_ID = getUrlParam('id','Empty'); // #SONA

// Get the time that the experiment began (ms since 1 January 1970)
var start_time = new Date().getTime();

// record this data to all trials
jsPsych.data.addProperties({
  subject: subject_id,
  StartTime: start_time,
});

// set up consent procedure
var consent = {
  type: "external-html", // specify jsPsych plugin
  url: "forms/consent.html", // point to consent form
  cont_btn: "consent-btns", // allow button group (specified in consent.html) to end the trial
  data: {"phase": "Consent"}, // record the phase
};

// set up the debreifing if they decline to participate
var no_consent = {
  timeline: [ // timeline is important for conditional functions
    {
      type: "external-html", // specify jsPsych plugin
      url: "forms/no_consent_deb.html", // point to debreif form
      data: {"phase": "No_consent"}, // record the phase
    },
    ],
  conditional_function: function(data){ // conditional trial
    if(consent_check == false){ // if consent_check is still false (default is false but becomes true if they consent to participate) then do this trial (debrief with URL redirect to SONA)
      return true
    }else{ //Otherwise don't do this trial
      return false
    }
  }
};

// set up full_screen mode
var enter_full_screen = {
  type: 'fullscreen', // specify jsPsych plugin
  fullscreen_mode: true, // enter fullscreen
  message: fullscreen_prompt, // from exp_text.js
  
  
// prepare an end to full_screen mode 
var exit_full_screen = {
  type: 'fullscreen', // get jsPsych plugin
  fullscreen_mode: false, // leave fullscreen
  
  // save data when going through exit full screen routine
  // will still save data at this point if they have alrady exited full screen
  on_finish: function() {
    firebase.database().ref(subject_id).set({ // #FIREBASE
      data: jsPsych.data.get().values() // #FIREBASE
    }) // #FIREBASE
  }
};

// set up debrief block
var debrief = {
  type: "html-keyboard-response", // get jsPsych plugin
  stimulus: debrief_text, // from exp_text.js
};

/*set up experiment structure*/
var timeline = [];
timeline.push(consent); // #TESTING
timeline.push(no_consent); // #TESTING
timeline.push(enter_full_screen);
timeline.push(exit_full_screen);
timeline.push(debrief);

/*start experiment*/
jsPsych.init({
    timeline: timeline,
    on_finish: function() {
      // redirect to sona on completion. Warning: give some final instruction to "press a key to end the experiment". It won't redirect unless they press a key. If they close the window before that then they won't be automatically granted credit.
      window.location.href = "https://umanitobapsych.sona-systems.com/webstudy_credit.aspx?experiment_id=XXXX&credit_token=11x11x111x1x1x1xx1x11111111xx11x&survey_code="+SONA_ID; // #SONA
      // display data at end:
      //jsPsych.data.displayData(); //Uncomment this and comment out the SONA redirect if instead of redirecting people to SONA you want to display the data to the browser window 
    }
});
</script>


<!-- code folding -->

</body>
</html>
